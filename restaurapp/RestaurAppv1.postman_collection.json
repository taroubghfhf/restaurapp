{
	"info": {
		"_postman_id": "9fb7271f-ff45-4ce3-aebf-1a0ea6aeba06",
		"name": "RestaurApp - Regression Tests",
		"description": "Colección completa de pruebas de regresión para RestaurApp API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45007782",
		"_collection_link": "https://monic-4323654.postman.co/workspace/monic's-Workspace~55e2eed9-96f2-492a-8e60-920bf7829a6e/collection/45007782-9fb7271f-ff45-4ce3-aebf-1a0ea6aeba06?action=share&source=collection_link&creator=45007782"
	},
	"item": [
		{
			"name": "0. Setup (Run First)",
			"item": [
				{
					"name": "Create Admin Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Role created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('roleId');",
									"    pm.environment.set(\"setupAdminRoleId\", jsonData.roleId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Admin User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"User created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('userId');",
									"    pm.expect(jsonData.email).to.eql('admin@restaurapp.com');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@restaurapp.com\",\n    \"password\": \"admin123\",\n    \"role\": {\n        \"roleId\": {{setupAdminRoleId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"});",
									"",
									"pm.test(\"Response contains user info\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('email');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('role');",
									"    pm.expect(jsonData).to.have.property('userId');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@restaurapp.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Error message is present\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('error');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"wrong@email.com\",\n    \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Roles",
			"item": [
				{
					"name": "Create Role - Waiter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Role created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"waiterRoleId\", jsonData.roleId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Waiter\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Role - Chef",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Role created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"chefRoleId\", jsonData.roleId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Chef\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData.length).to.be.at.least(3);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkByZXN0YXVyYXBwLmNvbSIsImV4cCI6MTc2MDQwOTI4OCwicm9sZSI6IkFkbWluIn0.xNMs4itJLjGorNSLpqs1Gb1Jog4Fgh0iULFAhYZi-bM",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Role updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('Administrator');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkByZXN0YXVyYXBwLmNvbSIsImV4cCI6MTc2MDQwOTI4OCwicm9sZSI6IkFkbWluIn0.xNMs4itJLjGorNSLpqs1Gb1Jog4Fgh0iULFAhYZi-bM",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roleId\": {{adminRoleId}},\n    \"name\": \"Admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Status",
			"item": [
				{
					"name": "Create Status - Pending",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('statusId');",
									"    pm.environment.set(\"pendingStatusId\", jsonData.statusId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pending\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Status - In Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"inProgressStatusId\", jsonData.statusId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Progress\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Status - Completed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"completedStatusId\", jsonData.statusId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Completed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Status - Available",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"availableStatusId\", jsonData.statusId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Available\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Status - Occupied",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"occupiedStatusId\", jsonData.statusId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Occupied\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData.length).to.be.at.least(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('In Progress');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statusId\": {{inProgressStatusId}},\n    \"name\": \"In Progress\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Users",
			"item": [
				{
					"name": "Create User - Waiter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"User created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('userId');",
									"    pm.environment.set(\"waiterId\", jsonData.userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Juan Pérez\",\n    \"email\": \"juan.perez@restaurapp.com\",\n    \"password\": \"waiter123\",\n    \"role\": {\n        \"roleId\": {{waiterRoleId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - Chef",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"User created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"chefId\", jsonData.userId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"María González\",\n    \"email\": \"maria.gonzalez@restaurapp.com\",\n    \"password\": \"chef123\",\n    \"role\": {\n        \"roleId\": {{chefRoleId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Categories",
			"item": [
				{
					"name": "Create Category - Appetizers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Category created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('categoryId');",
									"    pm.environment.set(\"appetizersId\", jsonData.categoryId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Appetizers\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category - Main Courses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Category created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"mainCoursesId\", jsonData.categoryId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Main Courses\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category - Desserts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Category created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"dessertsId\", jsonData.categoryId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Desserts\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category - Beverages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Category created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"beveragesId\", jsonData.categoryId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Beverages\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData.length).to.be.at.least(4);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Category updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('Starters');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"categoryId\": {{appetizersId}},\n    \"name\": \"Starters\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. Products",
			"item": [
				{
					"name": "Create Product - Caesar Salad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Product created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('productId');",
									"    pm.environment.set(\"caesarSaladId\", jsonData.productId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Caesar Salad\",\n    \"category\": {\n        \"categoryId\": {{appetizersId}}\n    },\n    \"price\": 8500,\n    \"stock\": 50,\n    \"status\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product - Grilled Chicken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Product created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"grilledChickenId\", jsonData.productId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Grilled Chicken\",\n    \"category\": {\n        \"categoryId\": {{mainCoursesId}}\n    },\n    \"price\": 18000,\n    \"stock\": 30,\n    \"status\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product - Beef Steak",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Product created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"beefSteakId\", jsonData.productId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Beef Steak\",\n    \"category\": {\n        \"categoryId\": {{mainCoursesId}}\n    },\n    \"price\": 25000,\n    \"stock\": 20,\n    \"status\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product - Tiramisu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Product created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"tiramisuId\", jsonData.productId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tiramisu\",\n    \"category\": {\n        \"categoryId\": {{dessertsId}}\n    },\n    \"price\": 7000,\n    \"stock\": 40,\n    \"status\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product - Coca Cola",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Product created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"cocaColaId\", jsonData.productId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Coca Cola\",\n    \"category\": {\n        \"categoryId\": {{beveragesId}}\n    },\n    \"price\": 3000,\n    \"stock\": 100,\n    \"status\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData.length).to.be.at.least(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Product updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.price).to.eql(9000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": {{caesarSaladId}},\n    \"name\": \"Caesar Salad\",\n    \"category\": {\n        \"categoryId\": {{appetizersId}}\n    },\n    \"price\": 9000,\n    \"stock\": 50,\n    \"status\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "7. Tables",
			"item": [
				{
					"name": "Create Table - 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Table created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('tableId');",
									"    pm.environment.set(\"table1Id\", jsonData.tableId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"capacity\": 4,\n    \"location\": 1,\n    \"status\": {\n        \"statusId\": {{availableStatusId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Table - 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Table created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"table2Id\", jsonData.tableId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"capacity\": 6,\n    \"location\": 2,\n    \"status\": {\n        \"statusId\": {{availableStatusId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Table - 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Table created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"table3Id\", jsonData.tableId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"capacity\": 2,\n    \"location\": 3,\n    \"status\": {\n        \"statusId\": {{availableStatusId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData.length).to.be.at.least(3);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkByZXN0YXVyYXBwLmNvbSIsImV4cCI6MTc2MDQxMjYyOSwicm9sZSI6IkFkbWluIn0.-sR1OuEXADcA8csskwE1RFTzt9jSt703AZQB7Wv7wAM",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Table Status to Occupied",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status.statusId).to.eql(pm.environment.get('occupiedStatusId'));",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkByZXN0YXVyYXBwLmNvbSIsImV4cCI6MTc2MDQwOTI4OCwicm9sZSI6IkFkbWluIn0.xNMs4itJLjGorNSLpqs1Gb1Jog4Fgh0iULFAhYZi-bM",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tableId\": {{table1Id}},\n    \"capacity\": 4,\n    \"location\": 1,\n    \"status\": {\n        \"statusId\": {{occupiedStatusId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "8. Order Tickets",
			"item": [
				{
					"name": "Create Order Ticket - 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Order Ticket created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('orderTicketId');",
									"    pm.environment.set(\"orderTicket1Id\", jsonData.orderTicketId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"2025-10-13T14:30:00\",\n    \"table\": {\n        \"tableId\": {{table1Id}}\n    },\n    \"waiter\": {\n        \"userId\": {{waiterId}}\n    },\n    \"chef\": {\n        \"userId\": {{chefId}}\n    },\n    \"status\": {\n        \"statusId\": {{pendingStatusId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-ticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order Ticket - 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Order Ticket created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"orderTicket2Id\", jsonData.orderTicketId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"2025-10-13T15:00:00\",\n    \"table\": {\n        \"tableId\": {{table2Id}}\n    },\n    \"waiter\": {\n        \"userId\": {{waiterId}}\n    },\n    \"chef\": {\n        \"userId\": {{chefId}}\n    },\n    \"status\": {\n        \"statusId\": {{pendingStatusId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-ticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Order Tickets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order Tickets by Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket/status/{{pendingStatusId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket",
								"status",
								"{{pendingStatusId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order Tickets by Waiter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket/waiter/{{waiterId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket",
								"waiter",
								"{{waiterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order Tickets by Chef",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket/chef/{{chefId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket",
								"chef",
								"{{chefId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order Ticket Status to In Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Order Ticket status updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status.statusId).to.eql(pm.environment.get('inProgressStatusId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket/{{orderTicket1Id}}/status/{{inProgressStatusId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket",
								"{{orderTicket1Id}}",
								"status",
								"{{inProgressStatusId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order Ticket Status to Completed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Order Ticket status updated to completed\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status.statusId).to.eql(pm.environment.get('completedStatusId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket/{{orderTicket1Id}}/status/{{completedStatusId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket",
								"{{orderTicket1Id}}",
								"status",
								"{{completedStatusId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order Ticket (Full Update)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Order Ticket updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('orderTicketId');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderTicketId\": {{orderTicket2Id}},\n    \"date\": \"2025-10-13T15:30:00\",\n    \"table\": {\n        \"tableId\": {{table2Id}}\n    },\n    \"waiter\": {\n        \"userId\": {{waiterId}}\n    },\n    \"chef\": {\n        \"userId\": {{chefId}}\n    },\n    \"status\": {\n        \"statusId\": {{inProgressStatusId}}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-ticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order Ticket Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Items have correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('orderItemId');",
									"        pm.expect(jsonData[0]).to.have.property('product');",
									"        pm.expect(jsonData[0]).to.have.property('quantity');",
									"        pm.expect(jsonData[0]).to.have.property('subtotal');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket/{{orderTicket1Id}}/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket",
								"{{orderTicket1Id}}",
								"items"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "9. Order Items",
			"item": [
				{
					"name": "Create Order Item - Caesar Salad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Order Item created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('orderItemId');",
									"    pm.environment.set(\"orderItem1Id\", jsonData.orderItemId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderTicket\": {\n        \"orderTicketId\": {{orderTicket1Id}}\n    },\n    \"product\": {\n        \"productId\": {{caesarSaladId}}\n    },\n    \"quantity\": 2,\n    \"subtotal\": 18000\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order Item - Grilled Chicken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Order Item created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"orderItem2Id\", jsonData.orderItemId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderTicket\": {\n        \"orderTicketId\": {{orderTicket1Id}}\n    },\n    \"product\": {\n        \"productId\": {{grilledChickenId}}\n    },\n    \"quantity\": 2,\n    \"subtotal\": 36000\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order Item - Beef Steak",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Order Item created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"orderItem3Id\", jsonData.orderItemId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderTicket\": {\n        \"orderTicketId\": {{orderTicket2Id}}\n    },\n    \"product\": {\n        \"productId\": {{beefSteakId}}\n    },\n    \"quantity\": 1,\n    \"subtotal\": 25000\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order Item - Tiramisu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Order Item created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"orderItem4Id\", jsonData.orderItemId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderTicket\": {\n        \"orderTicketId\": {{orderTicket2Id}}\n    },\n    \"product\": {\n        \"productId\": {{tiramisuId}}\n    },\n    \"quantity\": 2,\n    \"subtotal\": 14000\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order Item - Coca Cola",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Order Item created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"orderItem5Id\", jsonData.orderItemId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderTicket\": {\n        \"orderTicketId\": {{orderTicket2Id}}\n    },\n    \"product\": {\n        \"productId\": {{cocaColaId}}\n    },\n    \"quantity\": 3,\n    \"subtotal\": 9000\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Order Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData.length).to.be.at.least(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Order Item updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.quantity).to.eql(3);",
									"    pm.expect(jsonData.subtotal).to.eql(27000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderItemId\": {{orderItem1Id}},\n    \"orderTicket\": {\n        \"orderTicketId\": {{orderTicket1Id}}\n    },\n    \"product\": {\n        \"productId\": {{caesarSaladId}}\n    },\n    \"quantity\": 3,\n    \"subtotal\": 27000\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-item"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "10. Role Authorization Tests",
			"item": [
				{
					"name": "Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.environment.set(\"adminToken\", jsonData.token);",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"});",
									"",
									"pm.test(\"User has Admin role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.role.name).to.eql('Admin');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@restaurapp.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - Waiter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.environment.set(\"waiterToken\", jsonData.token);",
									"});",
									"",
									"pm.test(\"User has Waiter role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.role.name).to.eql('Waiter');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"juan.perez@restaurapp.com\",\n    \"password\": \"waiter123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - Chef",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.environment.set(\"chefToken\", jsonData.token);",
									"});",
									"",
									"pm.test(\"User has Chef role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.role.name).to.eql('Chef');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"maria.gonzalez@restaurapp.com\",\n    \"password\": \"chef123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test - Waiter Can Read Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Waiter can view products\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{waiterToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test - Waiter Cannot Create Product (403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Waiter lacks permission\", function () {",
									"    console.log('✅ Authorization working: Waiter cannot create products');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{waiterToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Product\",\n    \"category\": {\"categoryId\": 1},\n    \"price\": 5000,\n    \"stock\": 10,\n    \"status\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test - Chef Can Read Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Chef can view orders\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{chefToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test - Chef Cannot Create Order (403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Chef lacks permission\", function () {",
									"    console.log('✅ Authorization working: Chef cannot create orders');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{chefToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"2025-10-13T14:30:00\",\n    \"table\": {\"tableId\": 1},\n    \"waiter\": {\"userId\": 2},\n    \"chef\": {\"userId\": 3},\n    \"status\": {\"statusId\": 1}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-ticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test - Chef Can Update Order Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Chef can update order status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{chefToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/order-ticket/{{orderTicket1Id}}/status/{{inProgressStatusId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket",
								"{{orderTicket1Id}}",
								"status",
								"{{inProgressStatusId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test - Waiter Can Manage Tables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Waiter can view tables\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{waiterToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test - Chef Cannot Access Tables (403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Chef lacks permission\", function () {",
									"    console.log('✅ Authorization working: Chef cannot access tables');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{chefToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "11. Delete Operations",
			"item": [
				{
					"name": "Delete Order Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderItemId\": {{orderItem5Id}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order Ticket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orderTicketId\": {{orderTicket2Id}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/order-ticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"order-ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tableId\": {{table3Id}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": {{cocaColaId}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"categoryId\": {{beveragesId}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": {{waiterId}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statusId\": {{occupiedStatusId}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roleId\": {{chefRoleId}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}